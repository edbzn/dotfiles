#!/bin/bash

# Pre-commit hook to validate Ansible playbooks
# Install: cp .git-hooks/pre-commit .git/hooks/pre-commit && chmod +x .git/hooks/pre-commit

set -e

echo "üîç Running pre-commit checks..."

# Check if ansible-playbook is installed
if ! command -v ansible-playbook &> /dev/null; then
    echo "‚ö†Ô∏è  ansible-playbook not found. Skipping syntax check."
else
    echo "‚úì Checking Ansible syntax..."
    ansible-playbook playbook.yml --syntax-check
fi

# Check if yamllint is installed
if command -v yamllint &> /dev/null; then
    echo "‚úì Running YAML lint..."
    yamllint -c .yamllint.yml .
fi

# Check if ansible-lint is installed
if command -v ansible-lint &> /dev/null; then
    echo "‚úì Running Ansible lint..."
    ansible-lint -c .ansible-lint
fi

# Run playbook in check mode (dry run)
if command -v ansible-playbook &> /dev/null; then
    echo "‚úì Running playbook dry run (check mode)..."
    
    # Create temporary inventory
    TEMP_INVENTORY=$(mktemp)
    echo "[local]" > "$TEMP_INVENTORY"
    echo "localhost ansible_connection=local ansible_python_interpreter=$(which python3)" >> "$TEMP_INVENTORY"
    
    # Ensure vault password file exists
    if [ ! -f .vault_password ]; then
        echo "dummy-password-for-check-mode" > .vault_password
        CREATED_VAULT_FILE=true
    fi
    
    # Run check mode
    if ansible-playbook playbook.yml \
        -i "$TEMP_INVENTORY" \
        --check \
        -e "force_install=false" \
        --vault-password-file=.vault_password 2>&1 | grep -q "PLAY RECAP"; then
        echo "  ‚úì Check mode passed"
    else
        echo "  ‚ö†Ô∏è  Check mode found issues (not blocking)"
    fi
    
    # Cleanup
    rm -f "$TEMP_INVENTORY"
    if [ "$CREATED_VAULT_FILE" = true ]; then
        rm -f .vault_password
    fi
fi

# Check if shellcheck is installed
if command -v shellcheck &> /dev/null; then
    echo "‚úì Running ShellCheck..."
    find . -name "*.sh" -type f -exec shellcheck {} \; || echo "‚ö†Ô∏è  ShellCheck found issues (not blocking)"
fi

# Check for potential secrets in staged files
echo "‚úì Checking for potential secrets..."
if git diff --cached --name-only | grep -qE "(\.vault|secrets/)"; then
    echo "‚úì Encrypted secrets detected - assuming they are properly encrypted with ansible-vault"
fi

echo "‚úÖ All pre-commit checks passed!"
