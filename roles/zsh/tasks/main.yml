- name: Check if Zsh is installed
  shell: command -v zsh
  register: zsh_exists
  failed_when: false
  changed_when: false

- name: Install Zsh
  apt:
    name: "{{ zsh_packages }}"
    update_cache: yes
  become: yes
  when: zsh_exists.rc != 0

- name: Create ~/.zsh directory
  become: no
  file:
    path: "{{ zsh_directory }}"
    state: directory
    mode: 0755

- name: Check if zsh-syntax-highlighting exists
  stat:
    path: "{{ plugins.zsh_syntax_highlighting.dest }}"
  register: zsh_highlighting_exists

- name: Install zsh-highlighting
  become: no
  git:
    repo: "{{ plugins.zsh_syntax_highlighting.repo }}"
    dest: "{{ plugins.zsh_syntax_highlighting.dest }}"
    force: "{{ git_force }}"
    version: "{{ plugins.zsh_syntax_highlighting.version }}"
  when: not zsh_highlighting_exists.stat.exists

- name: Check if zsh-autosuggestions exists
  stat:
    path: "{{ plugins.zsh_autosuggestions.dest }}"
  register: zsh_autosuggestions_exists

- name: Install zsh-autosuggestions
  become: no
  git:
    repo: "{{ plugins.zsh_autosuggestions.repo }}"
    dest: "{{ plugins.zsh_autosuggestions.dest }}"
    force: "{{ git_force }}"
    version: "{{ plugins.zsh_autosuggestions.version }}"
  when: not zsh_autosuggestions_exists.stat.exists

- name: Check oh-my-zsh installed
  stat:
    path: "{{ oh_my_zsh_directory }}"
  register: ohmyzsh

- name: Install oh-my-zsh
  become: no
  shell:
    cmd: sh -c "$(curl -fsSL {{ oh_my_zsh.install_url }})"
  when: not ohmyzsh.stat.exists

- name: Check if powerlevel10k theme exists
  stat:
    path: "{{ themes.powerlevel10k.dest }}"
  register: powerlevel10k_exists

- name: Install zsh powerlevel10k theme
  become: no
  git:
    repo: "{{ themes.powerlevel10k.repo }}"
    dest: "{{ themes.powerlevel10k.dest }}"
    force: "{{ git_force }}"
    version: "{{ themes.powerlevel10k.version }}"
  when: not powerlevel10k_exists.stat.exists

- name: Check if nx-completion exists
  stat:
    path: "{{ plugins.nx_completion.dest }}"
  register: nx_completion_exists

- name: Install nx-completion
  become: no
  git:
    repo: "{{ plugins.nx_completion.repo }}"
    dest: "{{ plugins.nx_completion.dest }}"
    force: "{{ git_force }}"
    version: "{{ plugins.nx_completion.version }}"
  when: not nx_completion_exists.stat.exists
  tags: [nx-completion]

- name: Check if you-should-use plugin exists
  stat:
    path: "{{ plugins.you_should_use.dest }}"
  register: you_should_use_exists

- name: Install you-should-use plugin
  become: no
  git:
    repo: "{{ plugins.you_should_use.repo }}"
    dest: "{{ plugins.you_should_use.dest }}"
    force: "{{ git_force }}"
    version: "{{ plugins.you_should_use.version }}"
  when: not you_should_use_exists.stat.exists

- name: Check if zsh-completions exists
  stat:
    path: "{{ plugins.zsh_completions.dest }}"
  register: zsh_completions_exists

- name: Install zsh-completions
  become: no
  git:
    repo: "{{ plugins.zsh_completions.repo }}"
    dest: "{{ plugins.zsh_completions.dest }}"
    force: "{{ git_force }}"
    version: "{{ plugins.zsh_completions.version }}"
  when: not zsh_completions_exists.stat.exists
