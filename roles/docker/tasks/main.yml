- name: Check if Docker is installed
  shell: command -v docker
  register: docker_exists
  failed_when: false
  changed_when: false

- name: Install Docker required packages
  apt:
    pkg: "{{ docker_required_packages }}"
    state: "{{ package_state }}"
    update_cache: "{{ update_cache }}"
  become: true
  when: docker_exists.rc != 0

- name: Check if Docker GPG key exists
  stat:
    path: "{{ docker_repository.gpg_dest }}"
  register: docker_key_exists

- name: Add Docker GPG apt Key
  get_url:
    url: "{{ docker_repository.gpg_url }}"
    dest: "{{ docker_repository.gpg_dest }}"
    mode: "{{ docker_repository.gpg_mode }}"
    force: true
  become: true
  when: not docker_key_exists.stat.exists

- name: Check if Docker repository exists
  shell: grep -q "download.docker.com/linux/ubuntu" /etc/apt/sources.list.d/*.list || true
  register: docker_repo_exists
  failed_when: false
  changed_when: false

- name: Add Docker Repository
  apt_repository:
    repo: "{{ docker_repository.repo_url }}"
    state: present
  become: true
  when: docker_repo_exists.rc != 0

- name: Install docker-ce and docker-compose-plugin
  apt:
    name: "{{ docker_packages }}"
    state: "{{ package_state }}"
    update_cache: "{{ update_cache }}"
  become: true
  when: docker_exists.rc != 0

- name: Check if user is in docker group
  shell: groups {{ ansible_user_id }} | grep -q docker
  register: user_in_docker_group
  failed_when: false
  changed_when: false

- name: Add user to docker group
  ansible.builtin.user:
    name: "{{ ansible_user_id }}"
    groups: "{{ docker_group }}"
    append: true
  become: true
  when: user_in_docker_group.rc != 0
